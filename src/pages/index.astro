---
import { Offcourse } from "@/offcourse/"
import { getEntry, getEntries } from 'astro:content';
import { getImage } from "astro:assets";
import Layout from "@/layouts/Landing.astro"
import  Wave from "@/components/Wave.astro";
import  Bubble from "@/components/Bubble.astro";
import { PostListing } from "../components/Postlisting"
import  { 
  BaseHead, 
  OGType, 
  FeatureCard, 
  IconCard, 
  Step, 
  CallToAction, 
  PingItem
} from "@/components";

interface Props  {
  logoLink: "/"
}

const { logoLink = "/" } = Astro.props;
const entry = await getEntry("LandingPage", "index")
const { data } = entry
const { 
  sections, 
  profileImageURL,
  articles,
  courses: c
} = data;

const courses = await getEntries(c)
const posts = await getEntries(articles)
const profileImage = await getImage({src: profileImageURL, format: 'webp'});

const { 
  hero, 
  challenges, 
  concepts, 
  approach, 
  about, 
  services, 
  products, 
  case_study, 
  main_cta 
} = sections;

const sectionClasses = "py-24 md:py-36 lg:py-48";
const containerClasses = "container mx-auto px-8 md:px-16"
const sectionHeaderClasses = "text-3xl font-bold tracking-tighter sm:text-3xl md:text-4xl"
---
<Layout {logoLink}  {...data}>
  <BaseHead slot="og:data" url={Astro.url} type={OGType.WEBSITE} {...data} />
  <header class="h-vsh pt-36 pt-60 items-center justify-center bg-primary">
    <div class="text-center text-black">
      <h1 class="text-6xl font-extrabold mb-6 px-4">{hero.title}</h1>
      <p class="text-xl md:text-2xl mb-10 max-w-2xl mx-auto">{hero.subtitle}</p>
      <CallToAction {...hero.cta} client:load />
    </div>
    <div class="bg-primary dark:bg-primary">
      <Wave anchor="bottom" class="fill-white dark:fill-black"/>
    </div>
  <section class:list={["pt-16 mb-16 bg-white dark:bg-black"]}>
    <div class:list={[
      containerClasses, 
      "grid items-center justify-center text-center"
      ]}>
      <div class="grid grid-cols-1 gap-8 md:grid-cols-3 md:flex md:justify-between">
        {approach.items.map((item, index) => <Step step={index} {...item} />)}
      </div>
    </div>
  </section>
  </header>
  <section class:list={[sectionClasses]}>
    <div class:list={[
      containerClasses, 
      "grid items-center justify-center gap-8 lg:text-left lg:grid-cols-2"
      ]}>
      <div class="space-y-4">
        <h2 class:list={[sectionHeaderClasses]}>
          {challenges.title}
        </h2>
        <p class="text-muted-foreground 
          md:text-xl/relaxed lg:text-base/relaxed xl:text-xl/relaxed">
          {challenges.description}
        </p>
      </div>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        {challenges.items.map((item) => <IconCard className="bg-offwhite dark:bg-offblack border-none" {...item} />)}
      </div>
    </div>
  </section>
  <section class:list={[sectionClasses, "overflow-x-clip"]}>
    <div class:list={[
      containerClasses, 
      "grid items-center justify-center gap-4 text-center lg:gap-16"
      ]}>
      <div class="space-y-3">
        <h2 class:list={[sectionHeaderClasses]}>
          {concepts.title}
        </h2>
      </div>
      <div class="grid w-full grid-cols-1 gap-6 md:grid-cols-2 lg:gap-24">
        {concepts.items.map((item) => <PingItem {...item} />) }
      </div>
  </section>
  <section class:list={[sectionClasses]}>
    <div class:list={[
      containerClasses, 
      "grid items-center justify-center lg:text-left gap-x-16 lg:grid-cols-2"
      ]}>
      <div class="py-8 lg:order-last">
        <h2 class:list={[sectionHeaderClasses]}>
          {approach.title}
        </h2>
        <p class="text-xl text-gray-500 mb-8">{approach.subtitle}</p>
        <p class="text-muted-foreground max-w-5xl
          md:text-xl/relaxed lg:text-base/relaxed xl:text-xl/relaxed">
          {approach.description}
        </p>
      </div>
      <div class="grid grid-cols-1 gap-4">
        {approach.items.map((item) => <IconCard  {...item} />)}
      </div>
    </div>
  </section >
  <Bubble anchor="bottom" class="bg-primary"/>
  <section class:list={[sectionClasses, "bg-primary", "text-black"]}>
    <div class:list={[
      containerClasses, 
      "flex flex-col lg:flex-row gap-8 items-center"
      ]}>
      <div class="w-full lg:w-1/2">
        <img src={profileImage.src} alt={about.title}/>
      </div>
      <div class="flex flex-col mx-8 gap-8">
        <h2 class:list={[sectionHeaderClasses]}>
          {case_study.title}
        </h2>
        <div class="max-w-3xl mx-auto">
          <p class="mb-6">{case_study.description}</p>
          <ul class="list-disc list-inside mb-6">
            {case_study.key_points.map((point) => <li>{point}</li>)}
          </ul>
          <CallToAction {...case_study.cta} client:load/>
        </div>
      </div>
    </div>
  </section>
  <Wave anchor="top" class="bg-primary"/>
  <section class:list={[sectionClasses]}>
    <div class:list={[containerClasses, "flex flex-col justify-center items-center md:text-center"]}>
      <div class="py-8">
        <h2 class:list={[sectionHeaderClasses]}>
          {services.title}
        </h2>
        <p class="text-xl text-gray-500 mb-8">{services.subtitle}</p>
        <p class="text-muted-foreground max-w-5xl
          md:text-xl/relaxed lg:text-base/relaxed xl:text-xl/relaxed">
          {services.description}
        </p>
      </div>
      <div class="grid grid-cols-1 xl:grid-cols-3 gap-8 @container w-full">
        { services.items.map(product => <FeatureCard {...product}/>)}
      </div>
      <div class="text-center mt-12">
        <CallToAction {...services.cta} client:load/>
      </div>
    </div>
  </section>
  <section class:list={[sectionClasses]}>
    <div class:list={[
      containerClasses, 
      "flex flex-col justify-center items-center lg:text-center"
      ]}>
      <div class="py-8">
        <h2 class:list={[sectionHeaderClasses]}>
          {products.title}
        </h2>
        <p class="text-xl text-gray-500 mb-8">{products.subtitle}</p>
        <p class="text-muted-foreground max-w-5xl
          md:text-xl/relaxed lg:text-base/relaxed xl:text-xl/relaxed">
          {products.description}
        </p>
      </div>
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 w-full">
        { products.items.map(product => <FeatureCard className="border-none bg-offwhite dark:bg-offblack" iconSize="LARGE" {...product}/>)}
      </div>
    </div>
  </section>
  <div class="bg-white dark:bg-black">
    <Wave anchor="bottom" class="fill-primary dark:fill-primary"/>
  </div>
  <section class:list={[sectionClasses, "bg-primary", "text-black"]}>
    <div class:list={[
      containerClasses, 
      "flex flex-col lg:flex-row gap-8 items-center"
      ]}>
      <div class="w-full lg:w-1/2">
        <img src={profileImage.src} alt={about.title}/>
      </div>
      <div class="flex flex-col mx-8 gap-8">
        <h2 class:list={[sectionHeaderClasses]}>
          {about.title}
        </h2>
        <div class="max-w-3xl mx-auto">
          <p class="mb-6">{about.description}</p>
          <ul class="list-disc list-inside mb-6">
            {about.key_points.map((point) => <li>{point}</li>)}
          </ul>
        </div>
      </div>
    </div>
  </section>
  <div class="bg-primary">
    <Wave anchor="bottom" class="-bottom-1 fill-offwhite dark:fill-offblack"/>
  </div>
  <section class:list={[sectionClasses, "bg-offwhite dark:bg-offblack"]}>
  <div class="container px-8 gap-8 py-12 lg:py-20 mx-auto">
    <h2 class:list={[sectionHeaderClasses]}>Recent Content</h2>
    { posts.map(({slug, data}) => <PostListing {...data} order={1} {slug}/>)}
    <Offcourse data={courses.map(({data}) => data)} client:load/>
  </div>
  </section>
  <div class="bg-offwhite dark:bg-offblack">
    <Wave anchor="bottom" class="fill-white dark:fill-black"/>
  </div>
  <section class="py-16">
    <div class="container mx-auto px-8 md:px-16">
      <div class="text-center">
      <h2 class:list={[sectionHeaderClasses]}>
            {main_cta.title}</h2>
        <p class="text-xl mb-8">{main_cta.subtitle}</p>
      <CallToAction {...main_cta.cta} client:load/>
    </div>
  </section>
</Layout>
